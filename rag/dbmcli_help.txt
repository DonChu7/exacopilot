Help for ALTER ALERTHISTORY

Usage: ALTER ALERTHISTORY { ALL | alertid1 [,alertid2 ...] }
examinedby=<user-name>

Purpose: Sets the examinedby attribute of alerts.

Arguments:
<alertid(n)>:  The id of the alerts to be changed.
<user-name>:   Name of user acknowledging the alert.

Examples:
ALTER ALERTHISTORY 123 examinedby=joe

Help for ALTER DBSERVER

Usage: ALTER DBSERVER {
| SHUTDOWN SERVICES { ALL [FORCE] | RS | MS | BSW | EGS | ESNP [FORCE] | EDV | IFD }
| RESTART SERVICES { ALL | RS | MS | BSW | EGS | ESNP | EDV | IFD }
| RESTART BMC
| STARTUP SERVICES { ALL | RS | MS | BSW | EGS | ESNP | EDV | IFD }
| DISABLE SERVICES { BSW | EGS | ESNP | EDV | IFD }
| LED { ON | OFF }
| VALIDATE { MAIL | SNMP | CONFIGURATION }
| VALIDATE SYSLOGCONF facility.priority
| CONFIGUREBMC
| SNMPUSER.user_name = user_values
| attribute_name = attribute_value  [, attribute_name = attribute_value]...

Purpose: Performs an action or changes attributes of the DBServer.

Arguments:
<attribute_name>:         The name of the attribute to be changed.
<attribute_value>:        The value assigned to the attribute.
<facility.priority>:      The syslog facility and priority to use for a test message.
<user_name>:              The SNMP V3 user name to be added or changed.
<user_values>:            The SNMP V3 user parameters.

Options:
[SHUTDOWN SERVICES]:      Shuts down the specified service or ALL services.
A service can be an Exadata service (MS, RS) or an
Exascale service (BSW, EGS, ESNP, EDV, IFD).
ALL includes MS, RS, and enabled Exascale services.
The FORCE option bypasses safety checks to forcibly shutdown ESNP or ALL services.
Use with extreme caution.
[RESTART SERVICES]:       Shuts down and restarts the specified service or ALL services.
A service can be an Exadata service (MS, RS) or an
Exascale service (BSW, EGS, ESNP, EDV, IFD).
ALL includes MS, RS, and enabled Exascale services.
[STARTUP SERVICES]:       Starts the specified service or ALL services.
A service can be an Exadata service (MS, RS) or an
Exascale service (BSW, EGS, ESNP, EDV, IFD).
ALL includes MS, RS, and enabled Exascale services.
To enable a disabled service, you must start it specifically
by name.
[DISABLE SERVICES]:       Shuts down and disables the specified Exascale service.
A disabled service is prevented from automatically restarting
and is not included in ALTER DBSERVER operations on ALL services.
To enable a disabled service, you must start it specifically
by name.
[LED {ON | OFF}]:         The chassis LED is turned  on or off.

[VALIDATE MAIL]           A test message is sent using mail configuration
[VALIDATE SNMP]           A test message is sent using snmp configuration
[VALIDATE CONFIGURATION]  A test is run to verify server configuration.
[VALIDATE SYSLOGCONF]     A test message is sent for specified facility and priority.
[CONFIGUREBMC ]      Sets the BMC configuration for alerts
[RESTART BMC ]       Resets/Rebooots the BMC.

Attributes:
mailServer:               Set this attribute to the intended mail server to enable smart relay for sendmail service.
Examples:
ALTER DBSERVER RESTART SERVICES MS
ALTER DBSERVER VALIDATE SYSLOGCONF 'kern.info'
ALTER DBSERVER mailServer='mail_relay.example.com',                -
smtpFromAddr='john.doe@my_domain.com',                  -
smtpFrom='John Doe',                                    -
smtpToAddr='jane.smith@my_domain.com',                  -
snmpSubscriber=((host=host1, port=161),(host=host2)),   -
notificationPolicy='critical,warning,clear',            -
notificationMethod='mail,snmp'                          -
syslogconf=('kern.* @mgmtnode1','kern.crit @mgmtnode2')
ALTER DBSERVER SNMPUSER.v3User=(authprotocol=SHA,authpassword=*)
ALTER DBSERVER SNMPUSER.v3User=''

Help for ALTER ESCLUSTER

Usage: ALTER ESCLUSTER { START | <attribute_name> = <attribute_value>
[, <attribute_name> = <attribute_value>]...}

Purpose: Alter modifiable attributes of the Exascale cluster.

Arguments:
<attribute_name>: Attribute to be changed.
<attribute_value>: New attribute value.

Options:
[START]: Bypass safety checks and forcibly boot the cluster.

Examples:
ALTER ESCLUSTER esAdminPassword='password'
ALTER ESCLUSTER esAdminApiPubKey1='public key'

Help for ALTER ESFEATURE

Usage: ALTER ESFEATURE {RECONFIG}

Purpose: Alter the Exascale software feature configuration on this compute server.

Options:
[RECONFIG]: Command the local Exascale Node Proxy (ESNP) service to reconfigure the Exascale
software features registry based on the currently connected clients.

Examples:
ALTER ESFEATURE RECONFIG

Help for ALTER ESNODE

Usage: ALTER ESNODE
{ <attribute_name> = <attribute_value>
[, <attribute_name> = <attribute_value>]...}

Purpose: Alter modifiable attributes of the Exascale node on local host.

Arguments:
<attribute_name>: Attribute to be changed.
<attribute_value>: New attribute value.

Examples:
ALTER ESNODE esNodeTrustStore='abc'
ALTER ESNODE ersip='123', restBackendServerList='host1,host2', frontendPriority=1
ALTER ESNODE restBackend=true

Help for ALTER IBPORT

Usage: ALTER IBPORT { ALL | ibport_name [, ibport_name]... } RESET COUNTERS

Purpose: Perform an action on all InfiniBand ports or the
specified InfiniBand ports.

Arguments:
<ibport_name>: The name of the InfiniBand port to be altered.

Options:
[RESET COUNTERS]:   Reset all counters on the port.

Examples:
ALTER IBPORT ALL RESET COUNTERS
ALTER IBPORT 'HCA-1:1' RESET COUNTERS

Help for ALTER METRICDEFINITION

Usage: ALTER METRICDEFINITION { metric1 [,metric2]... }
{ [attribute_filters] } |
<attribute_name> = <attribute_value>
[attribute_filters]
}

Purpose: Alters the modifiable attributes of metric definitions.

Arguments:
<metric(n)>: The name of the metric definition(s).
<attribute_name>: attribute to be changed.
<attribute_value>: new attribute value.
Examples:
ALTER METRICDEFINITION DS_VIRTMEM_MS fineGrained=enabled

Help for ALTER PHYSICALDISK

Usage: ALTER PHYSICALDISK { diskid1 [,diskid2]...}
{  DROP FOR REPLACEMENT
| REENABLE }

Purpose: To perform the specified action on the specified disk.

Argument:
<diskid(n): The id of the physical disk(s) on which action is being performed.

Options:
[DROP FOR REPLACEMENT]: The command disables the physical disk, drops
the disk, and turns on the service LED.
[REENABLE]:             Re-enables a normal physical disk that was dropped for replacement. If the specified
disk is re-enabled successfully, then the service LED is turned off.

Examples:
ALTER PHYSICALDISK NVME_0 DROP FOR REPLACEMENT
ALTER PHYSICALDISK NVME_0 REENABLE

Help for ALTER THRESHOLD

Usage: ALTER THRESHOLD { ALL | threshold1 [,threshold2] }
<attribute_name> = <attribute_value>
[, <attribute_name> = <attribute_value>]...

Purpose: Alter modifiable attributes of thresholds.

Arguments:
<threshold(n)>:    The name of the threshold(s) to be changed.
<attribute_name>:  attribute to be changed.
<attribute_value>: new attribute value.

Examples:
ALTER THRESHOLD TEMP  warning=30

Help for ALTER USER

Usage: ALTER USER user
<attribute_name> = <attribute_value>
[, <attribute_name> = <attribute_value>]...

Purpose: Alter modifiable attributes of a user.

Arguments:
<user>: The name of the user to be altered.

Examples:
ALTER USER scott password=12345678a

Help for CREATE DBSERVER

Usage: CREATE DBSERVER [<name>]  [ attributename = value]...

Purpose: Configures the database server MS.

Arguments:
<attributename>: attribute to be set.
<value>: new attribute value.
<name>: Name to be assigned to the DBSERVER.
Uses hostname if nothing is specified

Examples:
CREATE DBSERVER interconnect1=bondib0

Help for CREATE DIAGPACK

Usage: CREATE DIAGPACK {
packStartTime=<time> [, durationInHrs=<duration>] [, packType=compact]
| alertName=<name> [, packType=compact]
| packType=sundiag
| packType=netdiag }

Purpose: Create a new diagnostic package.

A diagnostic package is a compressed file containing logs and traces,
which is written to $LOG_HOME.
Monitor the packaging process by using LIST DIAGPACK.

Arguments:
<packStartTime>:
The start time for the logs and traces in the diagnostic package.
Valid values are 'now' or a time within the past 7 days expressed
in the format: YYYY_MM_ddTHH_mm_ss
If this argument is specified, a compact diagnostic package is created,
which contains logs and traces as defined in
$OSS_SCRIPTS_HOME/diagPackConfig/config.xml.
<durationInHrs>:
The duration for package creation.
One package per hour for the specified period.
Default and minimum value: 1
Maximum value: 6
This argument only works in conjunction with <packStartTime>.
<alertName>:
The alert name, which is the subject of the diagnostic package.
Use LIST ALERTHISTORY DETAIL to find the alert name.
If this argument is specified, a compact diagnostic package is created,
which contains logs and traces as defined in
$OSS_SCRIPTS_HOME/diagPackConfig/config.xml.
<packType>:
The specific type of the diagnostic package being created:
compact - Default value. Creates a compact diagnostic package
which contains logs and traces as defined in
$OSS_SCRIPTS_HOME/diagPackConfig/config.xml.
sundiag - Creates a diagnostic package that contains OSWatcher logs,
ExaWatcher logs and server traces.
netdiag - Creates a diagnostic package that contains RDMA network fabric
(InfiniBand or RoCE) logs and traces.

Examples:
CREATE DIAGPACK packStartTime="now"
CREATE DIAGPACK packStartTime="2015_07_24T09_00_00", durationInHrs=2
CREATE DIAGPACK alertName=2_1
CREATE DIAGPACK packType=netdiag


Help for CREATE ESCLUSTER

Usage: CREATE ESCLUSTER <escluster_name>

Purpose: Creates Exascale cluster, which sets up the ExaROOT service
on this host.

Arguments:
<escluster_name>: Exascale cluster name.

Examples:
CREATE ESCLUSTER my_cluster

Help for CREATE ROLE

Usage: CREATE ROLE role role1[,role2]...

Purpose: Create new security role(s).

Arguments:
<role(n)>:  The name of the role to be created.

Examples:
CREATE ROLE admin,listonly

Help for CREATE THRESHOLD

Usage: CREATE THRESHOLD  th1 attributename=value[,attributename=value]...

Purpose: Defines conditions for generation of a metric alert.

Arguments:
<th(n)>:  The name of the threshold to be created.
<attributename>: attribute to be set.
<value>: new attribute value.

Examples:
CREATE THRESHOLD temp comparison='>', critical=30



Help for CREATE USER

Usage: CREATE USER user password="<new password>"

Purpose: Create a new user with new password.

Arguments:
<user>:  The name of the user to be created.
<new password>: new password value.

Examples:
CREATE USER scott password="Password1234"
CREATE USER scott password=*
Note: Using password=* (* being a literal asterisk) will prompt for a
password to be entered.


Help for DEREGISTER ESNODE

Usage: DEREGISTER ESNODE id="<esnode_id>"

Purpose: Removes the node with the specified ID from this Exascale
cluster. This command also removes the associated Exascale user.

Arguments:
<esnode_id>: ID of the target Exascale node.

Examples:
DEREGISTER ESNODE id=esnode1

Help for DESCRIBE

Usage: DESCRIBE <object_type>

Purpose: Displays a list of attributes for the object type that is
provided as an argument.  The tag 'modifiable' is displayed following
each attribute that can be changed using the ALTER command.

Arguments:
<object_type>: The object type for which attributes are listed.

Examples:
describe dbserver

Help for DROP ALERTHISTORY

Usage: DROP ALERTHISTORY { ALL | alert1 [, alert2]... }

Purpose: Removes alert(s) from the DBSERVER's alert history.

Arguments:
<alert(n)>:  The name of the alert(s) to be dropped.

Examples:
DROP ALERTHISTORY 1, 2_1, 2_2

Help for DROP DBSERVER

Usage: DROP DBSERVER

Purpose: Resets MS on DBSERVER to its original state.
Thresholds are dropped.
DBSERVER attributes are set to default values.

Examples:
DROP DBSERVER

Help for DROP ESINSTANCE

Usage: DROP ESINSTANCE [<name>]
Purpose: Remove the record of the target Exascale instance from this compute server.

Argument:
<name>:  The name of the Exascale instance to be dropped.

Examples:
DROP ESINSTANCE DB1

Help for DROP PHYSICALDISK

Usage: DROP PHYSICALDISK { diskid1 [,diskid2]...}
Purpose: Remove expansion disk(s) kit from the dbserver.

Argument:
<disk(n)>:  The name of the physical disk(s) to be dropped.

Examples:
DROP PHYSICALDISK NVME_2, NVME_3

Help for DROP ROLE

Usage: DROP ROLE { ALL | role1[,role2]... }

Purpose: Remove role(s) from the host.

Arguments:
<role(n)>:  The name of the role(s) to be dropped.

Options:
[FORCE]:    Drops role even if has been granted to some user.

Examples:
DROP ROLE r1,r2

Help for DROP THRESHOLD

Usage: DROP THRESHOLD { ALL | threshold1 [, threshold2]... }

Purpose: Removes threshold(s) from the DBSERVER.

Arguments:
<threshold(n)>:  The name of the threshold(s) to be dropped.

Examples:
DROP THRESHOLD TEMP

Help for DROP USER

Usage: DROP USER { ALL | user1[,user2]... }

Purpose: Remove user(s) from the host.

Arguments:
<user(n)>:  The name of the user(s) to be dropped.

Examples:
DROP USER scott,john

Help for GRANT PRIVILEGE

Usage: GRANT PRIVILEGE { ALL ACTIONS | <action> } ON { ALL OBJECTS | <object> }
[{ ALL ATTRIBUTES | ATTRIBUTES attr1 [, attr2]... }]
[{ WITH ALL OPTIONS | WITH OPTIONS option1 [, option2]... }]
TO ROLE { ALL | r1 [, r2]... }

Purpose: Grant a privilege to role(s).

Arguments:
<action>: Grant privilege for this command type.
<object>: Grant privilege for this object type.
<attr(n)>: Grant privilege for these attributes.
<option(n)>: Grant privilege for these options.
<r(n)>: The name of the role(s) to grant privilege to.

Options:
[ALL ACTIONS]: Grant privilege for all actions.
[ALL OBJECTS]: Grant privilege for all objects.
[ALL ATTRIBUTES]: Grant privilege for all attributes.
[WITH ALL OPTIONS]: Grant privilege for all options.

Examples:
GRANT PRIVILEGE ALL ACTIONS ON ALL OBJECTS ALL ATTRIBUTES WITH ALL OPTIONS TO ROLE ALL
GRANT PRIVILEGE list on dbserver ATTRIBUTES name WITH OPTIONS detail TO ROLE r1,r2

Help for GRANT ROLE

Usage: GRANT ROLE { ALL | r1 [, r2]... } TO USER { ALL | user1 [, user2]... }

Purpose: Grant role(s) to user(s).

Arguments:
<r(n)>: The name of the role(s) to be granted.
<user(n): The name of the user(s) to grant role(s) to.>

Examples:
GRANT ROLE r1,r2 TO USER u1,u2

Help for LIST ALERTDEFINITION

Usage: LIST ALERTDEFINITION [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for alert definitions.

Arguments:
<name>:  The name of the alert definition to be displayed.
<filters>:  an expression which determines which alert definitions should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST ALERTDEFINITION DETAIL

Help for LIST ALERTHISTORY

Usage: LIST ALERTHISTORY [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for alerts.

Arguments:
<name>:  The id of the alert to be displayed.
<filters>:  an expression which determines which alerts should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST ALERTHISTORY DETAIL

Help for LIST DBSERVER

Usage: LIST DBSERVER [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for the DBSERVER.

Arguments:
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST DBSERVER attributes status, upTime
LIST DBSERVER DETAIL

Help for LIST DIAGPACK

Usage: LIST DIAGPACK [DETAIL]

Purpose: Show the status of the packaging process
and the list of diagpacks
Examples:
LIST DIAGPACK
LIST DIAGPACK DETAIL

Help for LIST ESCLUSTER

Usage: LIST ESCLUSTER [ATTRIBUTES {ALL | <attribute_list>}] [DETAIL]

Purpose: Displays attributes for Exascale cluster.

Arguments:
<attribute_list>: A comma-separated list of attributes to display.

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST ESCLUSTER attributes esLeaderManagementIP
LIST ESCLUSTER detail

Help for LIST ESFEATURE

Usage: LIST ESFEATURE [ <name> |  <filters> ]  [<attribute_list>] [DETAIL]

Purpose: Displays attributes for Exascale features.

Arguments:
<filter>: An expression which determines which Exascale feature should
be displayed.
<name>: The name of the Exascale feature to be displayed.
<attribute_list>: A comma-separated list of attributes to display.

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST ESFEATURE where instUniqueName='DB1' detail
LIST ESFEATURE attributes name, activeVersion, supportedVersion
LIST ESFEATURE detail

Help for LIST ESINSTANCE

Usage: LIST ESINSTANCE [<name>] [ATTRIBUTES {ALL | <attribute_list>}] [DETAIL]

Purpose: Display specified attributes for an Exascale instance.

Arguments:
<name>: The name of the Exascale instance to be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]...}

Options:
[DETAIL]: Formats the display as an attribute on each line with
an attribute descriptor preceding each value.

Examples:
LIST ESINSTANCE OCSSD DETAIL
LIST ESINSTANCE OCSSD ATTRIBUTES name, userID

Help for LIST ESNODE

Usage: LIST ESNODE [ATTRIBUTES {ALL | <attribute_list>}] [DETAIL]

Purpose: Displays attributes of the Exascale node on the local host.

Arguments:
<attribute_list>: A comma-separated list of attributes to display.

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST ESNODE attributes esNodeRootCert
LIST ESNODE detail

Help for LIST IBPORT

Usage: LIST IBPORT [ <name> |  <filters> ]  [<attribute_list>] [DETAIL]

Purpose: Display specified attributes for InfiniBand ports.

Arguments:
<name>: The name of the InfiniBand port to be displayed.
<filter>: An expression which determines which InfiniBand ports should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]...}

Options:
[DETAIL]: Formats the display as an attribute on each line with
an attribute descriptor preceding each value.

Examples:
LIST IBPORT DETAIL
LIST IBPORT 'HCA-1:1' WHERE status='Active' ATTRIBUTES name, lid, portNumber DETAIL

Help for LIST LUN

Usage: LIST LUN [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for LUNs.

Arguments:
<name>:  The name of the LUN to be displayed.
<filters>:  an expression which determines which LUNs should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST LUN where lunSize > 1000G
LIST LUN DETAIL

Help for LIST METRICCURRENT

Usage: LIST METRICCURRENT [<name1>[, <name2>]... ] [<filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for current metrics.

Arguments:
<nameN>:  The unique name of the metric(s) to be displayed.
<filters>:  an expression of attributes that determines which metrics should
be displayed:
WHERE <filter1> [AND <fileter2>]...
<filterN>:  <attrN> <comparison operator> <value>
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }
The available attributes are displayed by DESCRIBE METRICCURRENT.

Options:
[DETAIL]: Formats the display with each attribute name followed
by its value on a separate line.

Examples:
list metriccurrent
list metriccurrent where alertState ! = 'normal'
list metriccurrent where metricObjectName = 'CD1' ATTRIBUTES name,metricValue

Help for LIST METRICDEFINITION

Usage: LIST METRICDEFINITION [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for metric definitions.

Arguments:
<name>:  The name of the metric definition to be displayed.
<filters>:  an expression which determines which metric definitions should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST METRICDEFINITION DETAIL

Help for LIST METRICHISTORY

Usage: LIST METRICHISTORY [<name1>[, <name2>]... ] [<filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for metrics over time.

Arguments:
<nameN>:  The unique name of the metric(s) to be displayed.
<filters>:  an expression that determines which metrics should
be displayed.
WHERE <filter1> [AND <fileter2>]...
<filterN>:  <attrN> <comparison operator> <value>
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }
The available attributes are displayed by DESCRIBE METRICHISTORY.
Filter on collectionTime to choose the desired time range.

Options:
[DETAIL]: Formats the display with each attribute name followed
by its value on a separate line.

Examples:
list metrichistory where alertState ! = 'normal' AND -
collectionTime > ' 2013-04-28T13:32:13-07:00'
list metrichistory where metricObjectName like '.*CPUT.*' AND -
collectionTime > ' 2013-04-28T13:32:13-07:00' AND -
collectionTime < ' 2013-04-28T15:32:13-07:00'

Help for LIST PHYSICALDISK

Usage: LIST PHYSICALDISK [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for physical disks.

Arguments:
<name>:  The name of the physical disk to be displayed.
<filters>:  an expression which determines which physical disks should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST PHYSICALDISK DETAIL

Help for LIST ROLE

Usage: LIST ROLE [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Display specified attributes for roles.

Arguments:
<name>:  The name of the role to be displayed.
<filters>:  an expression which determines which roles should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST ROLE DETAIL
LIST ROLE where name like 'role.*'

Help for LIST THRESHOLD

Usage: LIST THRESHOLD [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Displays specified attributes for thresholds.

Arguments:
<name>:  The name of the threshold to be displayed.
<filters>:  an expression which determines which thresholds should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST THRESHOLD  DETAIL
LIST THRESHOLD where name like '.*CPUT.*'

Help for LIST USER

Usage: LIST USER [<name> | <filters>] [<attribute_list>] [DETAIL]

Purpose: Display specified attributes for users.

Arguments:
<name>:  The name of the user to be displayed.
<filters>:  an expression which determines which users should
be displayed.
<attribute_list>: The attributes that are to be displayed.
ATTRIBUTES {ALL | attr1 [, attr2]... }

Options:
[DETAIL]: Formats the display as an attribute on each line, with
an attribute descriptor preceding each value.

Examples:
LIST USER DETAIL
LIST USER where name like 'user.*'

Help for REGISTER ESNODE

Usage: REGISTER ESNODE id="<node_id>",name="<node_name>",
esNodeSecurityPubKey="<key>", esNodeServices="<services>"

Purpose: Adds the node with the specified ID to this Exascale cluster.
This command also adds the associated Exascale user.

Arguments:
<node_id>:   ID of the Exascale node.
<node_name>: Name of the Exascale node.
<key>:       RSA public key of the Exascale node.
<services>:  The services which this Exascale node is allowed to
run. The value can be one or more of the following,
separated by '|':
cell, egs, ers, syseds, usreds, bsm, bsw
egs stands for ExaROOT service.
ers stands for ExaCTRL service.
syseds stands for SysExaVaultMgr service.
usreds stands for UsrExaVaultMgr service.
bsm stands for ExaBLKMgr service.
bsw stands for ExaBLKWkr service.

Examples:
REGISTER ESNODE id="esnode1",name="host01_esnode",
esNodeSecurityPubKey="key1",esNodeServices="ers|bsm"

Help for REVOKE PRIVILEGE

Usage: REVOKE PRIVILEGE { ALL ACTIONS | <action> } ON { ALL OBJECTS | <object> }
{ ALL ATTRIBUTES | ATTRIBUTES attr1 [, attr2]... }
{ WITH ALL OPTIONS | WITH OPTIONS option1 [, option2]... }
FROM ROLE { ALL | r1 [, r2]... }

Purpose: Revoke a privilege from role(s).

Arguments:
<action>: Revoke privilege for this command type.
<object>: Revoke privilege for this object type.
<attr(n)>: Revoke privilege for these attributes.
<option(n)>: Revoke privilege for these options.
<r(n)>: The name of the role(s) to revoke privilege from.

Options:
[ALL ACTIONS]: Revoke privilege for all actions.
[ALL OBJECTS]: Revoke privilege for all objects.
[ALL ATTRIBUTES]: Revoke privilege for all attributes.
[WITH ALL OPTIONS]: Revoke privilege for all options.

Examples:
REVOKE PRIVILEGE ALL ACTIONS ON ALL OBJECTS ALL ATTRIBUTES WITH ALL OPTIONS FROM ROLE ALL
REVOKE PRIVILEGE list on dbserver ATTRIBUTES name WITH OPTIONS detail FROM ROLE r1,r2

Help for REVOKE ROLE

Usage: REVOKE ROLE { ALL | r1 [, r2]... } FROM USER { ALL | user1 [, user2]... }

Purpose: Revoke role(s) from user(s).

Arguments:
<r(n)>: The name of the role(s) to be revoked.
<user(n): The name of the user(s) to revoke role(s) from.>

Examples:
REVOKE ROLE r1,r2 FROM USER u1,u2

Help for SET

Usage: SET <variable> <value>

Purpose: Sets a variable to alter the DBMCLI environment settings for your
current session.

Arguments:
variable and value represent one of the following clauses:
DATEFORMAT { STANDARD | LOCAL }
ECHO { ON | OFF }

Examples:
set dateformat local
set echo on

Help for SPOOL

Usage:  SPO[OL] [<filename> [ CRE[ATE] | REP[LACE] | APP[END]] | OFF ]

Purpose: SPOOL <filename>: Direct the results to the file <filename>.
SPOOL OFF: Turn off the spooling.
SPOOL: Check the current spooling status.

Arguments:
<filename>: The filename where the results will be output.

Options:
[APPEND]: If the filename already exists, the following output will
be appended to the file. Without this option, the existing file
contents will be replaced.
[CREATE]: If the filename already exists, an error is reported.
[REPLACE]: If the filename already exists, the contents will be
replaced.  This is the default, when no option is provided.

Examples:
spool myfile
spool myfile append
spool off
spool

Help for START

Usage: STA[RT] <filename>

Purpose: Run the specified DBMCLI script.

Arguments:
<filename>: The file containing the DBMCLI commands to execute.

Examples:
start my_script
